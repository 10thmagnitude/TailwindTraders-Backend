parameters:
  acrName: ''
  serviceName: ''  # product-api
  serviceShortName: '' # productapi
  environment: dev
  imageRepo: ''  # product.api
  ingressHost: ''
  tag: ''
  autoscale: false
  services: []

steps:
# hack because KubernetesManifest breaks when helm3 is used: https://github.com/microsoft/azure-pipelines-tasks/issues/12511
# - task: HelmInstaller@1
#   displayName: Install helm2 (for baking)
#   inputs:
#     helmVersionToInstall: '2.16.3'

- ${{ each s in parameters.services }}:
  - ${{ if eq(s.skip, 'false') }}:
    - task: KubernetesManifest@0
      displayName: Bake ${{ s.serviceName }} manifest
      name: bake_${{ s.serviceShortName }}
      inputs:
        action: bake
        renderType: helm
        releaseName: ${{ s.serviceName }}-${{ parameters.environment }}
        helmChart: $(Build.SourcesDirectory)/Deploy/helm/${{ s.serviceName }}
        overrideFiles: $(Build.SourcesDirectory)/Deploy/helm/__values/values.yml
        overrides: |
          ingress.hosts:{'${{ parameters.ingressHost }}'}
          image.repository:${{ parameters.acrName }}.azurecr.io/${{ s.imageRepo }}
          image.tag:${{ parameters.tag }}
          hpa.activated:${{ parameters.autoscale }}
          ingress.tls[0].secretName:tt-letsencrypt-staging
          ingress.tls[0].hosts:{'${{ parameters.ingressHost }}'}
    - task: KubernetesManifest@0
      displayName: Deploy ${{ s.serviceName }} to k8s
      inputs:
        manifests: $(bake_${{ s.serviceShortName }}.manifestsBundle)
        imagePullSecrets: $(imagePullSecret)