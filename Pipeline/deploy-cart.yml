name: 0.99$(Rev:.r)

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - Source/Services/Tailwind.Traders.Cart.Api

resources:
- repo: self

variables:
  subscription: '10M Client Demo'
  resourceGroup: 'cd-tailwind'
  acrName: 'ttacrroodsefvnkxhc' # generated by the infra pipeline
  acrConnection: 'TailWindACR' # you have to create this endpoint in AzDO
  imagePullSecret: acr-auth
  autoscale: false
  deployWindows: false
  deployfrom: 'Deploy'
  
stages:
- stage: build
  displayName: Build Image
  jobs:
  - job: Build_Linux
    displayName: Build Linux Containers
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build the image
      inputs:
        containerRegistry: $(acrConnection)
        repository: cart.api
        command: buildAndPush
        buildContext: Source/Services/Tailwind.Traders.Cart.Api
        Dockerfile: Source/Services/Tailwind.Traders.Cart.Api/Dockerfile
        tags: |
          $(Build.BuildNumber)

- stage: canary
  displayName: Canary Deployment
  dependsOn: build
  jobs:
  - deployment: canary
    displayName: Deploy canary
    pool:
      vmImage: 'ubuntu-latest'
    environment:
      TailWindAKS-Dev.dev
    strategy:
      canary:
        increments: [10, 20]
        deploy:
          steps:
          - task: HelmInstaller@1
            displayName: Install helm2 (for baking)
            inputs:
              helmVersionToInstall: '2.16.3'
          - task: AzureCLI@2
            displayName: Calculate DNS name
            inputs:
              azureSubscription: $(subscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                aksName=$(az aks list -g $(resourceGroup) --query [0].name -o tsv)
                hname=$(az aks show -n $aksName -g $(resourceGroup) --query addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName -o tsv)
                echo "##vso[task.setvariable variable=IngressHost;]$hname"
          - task: KubernetesManifest@0
            displayName: Bake manifest
            name: bake
            inputs:
              action: bake
              renderType: helm2
              releaseName: cart-api-dev
              helmChart: $(Build.SourcesDirectory)/Deploy/helm/cart-api
              overrideFiles: $(Build.SourcesDirectory)/Deploy/helm/__values/values.yml
              overrides: |
                ingress.hosts:{'$(IngressHost)'}
                image.repository:$(acrName).azurecr.io/cart.api
                image.tag:$(Build.BuildNumber)
                hpa.activated:false
                ingress.tls[0].secretName:tt-letsencrypt-staging
                ingress.tls[0].hosts:{'$(IngressHost)'}
          - task: KubernetesManifest@0
            inputs:
              action: deploy
              trafficSplitMethod: smi
              strategy: $(strategy.name)
              percentage: $(strategy.increment)
              manifests: $(bake.manifestsBundle)
              imagePullSecrets: $(imagePullSecret)
