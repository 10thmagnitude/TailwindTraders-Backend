name: 1.0$(Rev:.r)

trigger:
- master

resources:
- repo: self

variables:
  subscription: '10M Client Demo'
  acrName: 'ttacrroodsefvnkxhc' # generated by the infra pipeline
  resourceGroup: 'cd-tailwind'
  deployWindows: false
  deployfrom: 'Deploy'

stages:
- stage: build
  displayName: Build Images
  jobs:
  - job: Deploy_Scripts
    displayName: Deploy Scripts
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CopyFiles@2
      displayName: Copy release scripts
      inputs:
        SourceFolder: '$(deployfrom)'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: Publish scripts artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'deploy'
        publishLocation: 'Container'

  - job: Build_Linux
    displayName: Build Linux Containers
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@1
      displayName: Build and Push to ACR 
      inputs:
        azureSubscription: '$(subscription)'
        scriptLocation: 'inlineScript'
        inlineScript: 'pwsh -File Build-Push.ps1 -resourceGroup $(resourceGroup) -acrName $(acrName) -dockerTag $(Build.BuildId)'
        addSpnToEnvironment: true
        useGlobalConfig: true
        workingDirectory: 'Deploy/powershell'

  - job: Build_Windows
    displayName: Build Windows Containers
    condition: and(succeeded(), eq(variables['deployWindows'], 'true'))
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**/Tailwind.Traders.Backend.Rewards.sln'
        feedsToUse: 'select'
    - task: MSBuild@1
      inputs:
        solution: '**/Tailwind.Traders.Rewards.Registration.Api.csproj'
        msbuildArchitecture: 'x64'
        msbuildArguments: '/p:DeployOnBuild=true /p:PublishProfile=FolderProfile.pubxml'
        clean: true
    - task: AzureCLI@1
      displayName: Build and Push to ACR 
      inputs:
        azureSubscription: '$(subscription)'
        scriptLocation: 'inlineScript'
        inlineScript: 'pwsh -Command .\Build-Push.ps1 -resourceGroup $(resourceGroup) -acrName $(acrName) -dockerTag $(Build.BuildId) -isWindowsMachine 1'
        addSpnToEnvironment: true
        useGlobalConfig: true
        workingDirectory: 'Deploy\powershell'

- stage: dev
  displayName: Build Images
  dependsOn: build
  jobs:
  - deployment: deploy_dev
    displayName: Deploy
    environment:
      TailWind-Dev
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureCLI@2
            displayName: Create ACR secret for namespace
            inputs:
              azureSubscription: $(subscription)
              scriptType: pscore
              scriptPath: Deploy/powershell/Create-Secret.ps1
              scriptArguments:
                -resourceGroup $(resourceGroup) `
                -namespace dev
              azurePowerShellVersion: latestVersion
              powerShellErrorActionPreference: continue
              workingDirectory: $(Build.SourcesDirectory)/Deploy/powershell
          - pwsh: Generate-Config.ps1 -resourceGroup $(resourceGroup) -outputFile ..\helm\__values\values.yml
            displayName: Generate values for environment
            workingDirectory: 'Deploy/powershell'
    
    